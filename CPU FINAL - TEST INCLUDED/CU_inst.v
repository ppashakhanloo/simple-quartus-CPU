// Copyright (C) 1991-2009 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.0 (Build Build 132 02/25/2009)
// Created on Fri Jun 13 14:57:03 2014

CU CU_inst
(
	.reset(reset_sig) ,	// input  reset_sig
	.clock(clock_sig) ,	// input  clock_sig
	.COUNT_ENABLE(COUNT_ENABLE_sig) ,	// output  COUNT_ENABLE_sig
	.SEL_LOAD_PC_1(SEL_LOAD_PC_1_sig) ,	// output  SEL_LOAD_PC_1_sig
	.SEL_LOAD_PC_0(SEL_LOAD_PC_0_sig) ,	// output  SEL_LOAD_PC_0_sig
	.IR_ENABLE(IR_ENABLE_sig) ,	// output  IR_ENABLE_sig
	.SEL_AW_RF(SEL_AW_RF_sig) ,	// output  SEL_AW_RF_sig
	.SEL_DW_RF_1(SEL_DW_RF_1_sig) ,	// output  SEL_DW_RF_1_sig
	.SEL_DW_RF_0(SEL_DW_RF_0_sig) ,	// output  SEL_DW_RF_0_sig
	.WE_RF(WE_RF_sig) ,	// output  WE_RF_sig
	.SEL_IMM(SEL_IMM_sig) ,	// output  SEL_IMM_sig
	.SEL_INP1(SEL_INP1_sig) ,	// output  SEL_INP1_sig
	.SEL_INP2(SEL_INP2_sig) ,	// output  SEL_INP2_sig
	.SEL_ALU_3(SEL_ALU_3_sig) ,	// output  SEL_ALU_3_sig
	.SEL_ALU_2(SEL_ALU_2_sig) ,	// output  SEL_ALU_2_sig
	.SEL_ALU_1(SEL_ALU_1_sig) ,	// output  SEL_ALU_1_sig
	.SEL_ALU_0(SEL_ALU_0_sig) ,	// output  SEL_ALU_0_sig
	.WE_RAM(WE_RAM_sig) ,	// output  WE_RAM_sig
	.SEL_AR_RAM(SEL_AR_RAM_sig) ,	// output  SEL_AR_RAM_sig
	.SEL_AR2_RF(SEL_AR2_RF_sig) 	// output  SEL_AR2_RF_sig
);

defparam CU_inst.FETCH = 0;
defparam CU_inst.ADD = 1;
defparam CU_inst.SUB = 2;
defparam CU_inst.MUL = 3;
defparam CU_inst.DIV = 4;
defparam CU_inst.MOD_M = 5;
defparam CU_inst.MAX = 6;
defparam CU_inst.MIN = 7;
defparam CU_inst.NOT_M = 8;
defparam CU_inst.NAND_M = 9;
defparam CU_inst.NOR_M = 10;
defparam CU_inst.XNOR_M = 11;
defparam CU_inst.SHL = 12;
defparam CU_inst.SHRA = 13;
defparam CU_inst.ROL_M = 14;
defparam CU_inst.ROR_M = 15;
defparam CU_inst.LDI = 16;
defparam CU_inst.ADDI = 17;
defparam CU_inst.SUBI = 18;
defparam CU_inst.MULI = 19;
defparam CU_inst.DIVI = 20;
defparam CU_inst.NANDI = 21;
defparam CU_inst.NORI = 22;
defparam CU_inst.XNORI = 23;
defparam CU_inst.MOV = 24;
defparam CU_inst.SWP_0 = 25;
defparam CU_inst.SWP_1 = 26;
defparam CU_inst.SWP_2 = 27;
defparam CU_inst.LD = 28;
defparam CU_inst.STR = 29;
defparam CU_inst.JMP = 30;
defparam CU_inst.BEQ = 31;
defparam CU_inst.BLT = 32;
defparam CU_inst.HLT = 33;
defparam CU_inst.SHRL = 34;
defparam CU_inst.START = 35;
